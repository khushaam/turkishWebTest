<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-12-06T18:06:27Z" name="Default Suite" finished-at="2022-12-06T18:09:22Z" duration-ms="174759">
    <groups>
    </groups>
    <test started-at="2022-12-06T18:06:27Z" name="turkishWebTest" finished-at="2022-12-06T18:09:22Z" duration-ms="174759">
      <class name="myTestProject1.test.registerTest">
        <test-method is-config="true" signature="openChrome()[pri:0, instance:myTestProject1.test.registerTest@24b1d79b]" started-at="2022-12-06T18:06:27Z" name="openChrome" finished-at="2022-12-06T18:06:30Z" duration-ms="3080" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openChrome -->
        <test-method signature="registerWithoutEmail()[pri:1, instance:myTestProject1.test.registerTest@24b1d79b]" started-at="2022-12-06T18:06:30Z" name="registerWithoutEmail" description="Registering without Email" finished-at="2022-12-06T18:06:46Z" duration-ms="16083" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithoutEmail -->
        <test-method signature="registerWithoutUsername()[pri:2, instance:myTestProject1.test.registerTest@24b1d79b]" started-at="2022-12-06T18:06:46Z" name="registerWithoutUsername" description="Registering without username" finished-at="2022-12-06T18:06:57Z" duration-ms="10633" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithoutUsername -->
        <test-method signature="registerWithoutPassword()[pri:3, instance:myTestProject1.test.registerTest@24b1d79b]" started-at="2022-12-06T18:06:57Z" name="registerWithoutPassword" description="registering without password" finished-at="2022-12-06T18:07:04Z" duration-ms="7426" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithoutPassword -->
        <test-method signature="registerWithWrongConfirmPassword()[pri:4, instance:myTestProject1.test.registerTest@24b1d79b]" started-at="2022-12-06T18:07:04Z" name="registerWithWrongConfirmPassword" description="registering with wrong confirm password" finished-at="2022-12-06T18:07:41Z" duration-ms="36325" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithWrongConfirmPassword -->
        <test-method signature="registerWithoutConfirmPassword()[pri:5, instance:myTestProject1.test.registerTest@24b1d79b]" started-at="2022-12-06T18:07:41Z" name="registerWithoutConfirmPassword" description="registering without confirm password" finished-at="2022-12-06T18:07:48Z" duration-ms="6870" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithoutConfirmPassword -->
        <test-method signature="registerWithoutCheckBox()[pri:6, instance:myTestProject1.test.registerTest@24b1d79b]" started-at="2022-12-06T18:07:48Z" name="registerWithoutCheckBox" description="registering without checkbox" finished-at="2022-12-06T18:07:53Z" duration-ms="5183" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithoutCheckBox -->
        <test-method signature="registerWithValidData()[pri:7, instance:myTestProject1.test.registerTest@24b1d79b]" started-at="2022-12-06T18:07:53Z" name="registerWithValidData" description="Registering with valid valid data: HappyFlow" finished-at="2022-12-06T18:08:08Z" duration-ms="15292" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [https://turkishemarket.com/] but found [https://turkishemarket.com/users/registration]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [https://turkishemarket.com/] but found [https://turkishemarket.com/users/registration]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at myTestProject1.test.registerTest.registerWithValidData(registerTest.java:74)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithValidData -->
        <test-method signature="registerWithUnAvailableEmail()[pri:8, instance:myTestProject1.test.registerTest@24b1d79b]" started-at="2022-12-06T18:08:08Z" name="registerWithUnAvailableEmail" description="Registering with already registered (unavailable) email" finished-at="2022-12-06T18:08:21Z" duration-ms="13201" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithUnAvailableEmail -->
        <test-method signature="registerWithInvalidEmail()[pri:9, instance:myTestProject1.test.registerTest@24b1d79b]" started-at="2022-12-06T18:08:21Z" name="registerWithInvalidEmail" description="registering with invalid email" finished-at="2022-12-06T18:08:46Z" duration-ms="24659" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithInvalidEmail -->
        <test-method signature="registerWithInvalidName()[pri:10, instance:myTestProject1.test.registerTest@24b1d79b]" started-at="2022-12-06T18:08:46Z" name="registerWithInvalidName" description="registering with invalid full name" finished-at="2022-12-06T18:09:22Z" duration-ms="35616" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithInvalidName -->
        <test-method is-config="true" signature="closeChrome()[pri:0, instance:myTestProject1.test.registerTest@24b1d79b]" started-at="2022-12-06T18:09:22Z" name="closeChrome" finished-at="2022-12-06T18:09:22Z" duration-ms="319" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeChrome -->
      </class> <!-- myTestProject1.test.registerTest -->
    </test> <!-- turkishWebTest -->
  </suite> <!-- Default Suite -->
</testng-results>
